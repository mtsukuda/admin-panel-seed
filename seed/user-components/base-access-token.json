{
  "componentName": "BaseAccessToken",
  "import": [
    {
      "name": "queryParameters",
      "from": "../../helpers/Functions/url-parameters",
      "type": "package",
      "props": []
    },
    {
      "name": "deleteQuery",
      "from": "../../helpers/Functions/url-parameters",
      "type": "package",
      "props": []
    },
    {
      "name": "setQuery",
      "from": "../../helpers/Functions/url-parameters",
      "type": "package",
      "props": []
    },
    {
      "name": "baseRedirectToAuthorization",
      "from": "../../helpers/Functions/base-auth",
      "type": "package",
      "props": []
    },
    {
      "name": "baseAccessToken",
      "from": "../../helpers/Functions/base-auth",
      "type": "package",
      "props": []
    }
  ],
  "renderBeforeReturn": [
  ],
  "lifeCycleMethods": [
    {
      "methodName": "componentDidMount",
      "code": "this.getAccessToken();"
    }
  ],
  "tags": [
    {
      "componentMethod": {
        "states": [
          { "name": "userInfo", "initial": "\"\"" }
        ],
        "methods": [
          { "name": "getAccessToken", "bind": false, "methodType": "plane-async", "args": [], "code": "const qs = queryParameters();console.log(qs);if (qs === null || qs.code === undefined) {baseRedirectToAuthorization();return;}await baseAccessToken(qs.code).then((data) => {console.log(data);if (data === null) {baseRedirectToAuthorization();return;}deleteQuery([\"code\"]);setQuery({ at: data.accessToken, rt: data.refreshToken });window.location.href = window.location.origin + '/base-home' + window.location.search;});" }
        ]
      }
    },
    {
      "tag": "p",
      "content": "\"アクセストークンを取得しています...\"",
      "props": []
    }
  ]
}
