{
  "componentName": "BaseOrders",
  "import": [
    {
      "name": "Card",
      "from": "reactstrap",
      "type": "package",
      "props": []
    },
    {
      "name": "CardBody",
      "from": "reactstrap",
      "type": "package",
      "props": []
    },
    {
      "name": "CardTitle",
      "from": "reactstrap",
      "type": "package",
      "props": []
    },
    {
      "name": "queryParameters",
      "from": "../../helpers/Functions/url-parameters",
      "type": "package",
      "props": []
    },
    {
      "name": "setQuery",
      "from": "../../helpers/Functions/url-parameters",
      "type": "package",
      "props": []
    },
    {
      "name": "baseRedirectToAuthorization",
      "from": "../../helpers/Functions/base-auth",
      "type": "package",
      "props": []
    },
    {
      "name": "baseRefreshToken",
      "from": "../../helpers/Functions/base-auth",
      "type": "package",
      "props": []
    },
    {
      "name": "baseOrders",
      "from": "../../helpers/Functions/base-auth",
      "type": "package",
      "props": []
    },
    {
      "name": "baseNextOrders",
      "from": "../../helpers/Functions/base-auth",
      "type": "package",
      "props": []
    },
    {
      "name": "BaseOrdersPagination",
      "from": "../../components/UserCommon/BaseOrdersPagination",
      "type": "default",
      "props": []
    },
    {
      "name": "MDBDataTable",
      "from": "mdbreact",
      "type": "package",
      "props": []
    }
  ],
  "renderBeforeReturn": [
    "if (this.state.orderData === null) {return <React.Fragment />;}"
  ],
  "lifeCycleMethods": [
    {
      "methodName": "componentDidMount",
      "code": "this.getOrders();"
    }
  ],
  "tags": [
    {
      "componentMethod": {
        "states": [
          { "name": "orderData", "initial": "null" }
        ],
        "methods": [
          { "name": "getOrders", "bind": false, "methodType": "plane-async", "args": [], "code": "const qs = queryParameters();console.log(qs);if (qs === null || qs.at === undefined || qs.rt === undefined) {baseRedirectToAuthorization();return;}if (qs.offset === undefined || qs.offset === \"0\") {await baseOrders(qs.at).then((data) => {console.log(data);let clickHandleData = this.addRowClickHandler(data);this.setState({orderData: {columns: [{ label: \"注文日\", field: \"ordered_format\" },{ label: \"名前\", field: \"last_name\" },{ label: \"\", field: \"first_name\" },{ label: \"\", field: \"subscription_icon\" },],rows: clickHandleData,},});});} else {await baseNextOrders(qs.at, qs.offset).then((data) => {console.log(data);let clickHandleData = this.addRowClickHandler(data);this.setState({orderData: {columns: [{ label: \"注文日\", field: \"ordered_format\" },{ label: \"名前\", field: \"last_name\" },{ label: \"\", field: \"first_name\" },{ label: \"\", field: \"subscription_icon\" },],rows: clickHandleData,},});});}await baseRefreshToken(qs.rt).then((data) => {console.log(data);if (data === null) {baseRedirectToAuthorization();return;}setQuery({ at: data.accessToken, rt: data.refreshToken });});" },
          { "name": "navigate", "bind": false, "methodType": "plane", "args": ["offset"], "code": "setQuery({ offset: offset });window.location.href = document.location.href;" },
          { "name": "addRowClickHandler", "bind": false, "methodType": "plane", "args": ["data"], "code": "let clickHandleData = [];if (Array.isArray(data)) {data.forEach((row) => {let subscription_icon = \"\";if (row.subscription.unique_key === null) {subscription_icon = <i class='bx bx-infinite lead'></i>;}row[\"subscription_icon\"] = subscription_icon;row[\"clickEvent\"] = () => this.rowClick(row.unique_key);clickHandleData.push(row);});} else {return data;}return clickHandleData;" },
          { "name": "rowClick", "bind": false, "methodType": "plane", "args": ["uniqueKey"], "code": "console.log(uniqueKey);setQuery({ unique_key: uniqueKey });const url = new URL(document.location.href);window.location.href = url.origin + '/base-orders-detail' + url.search;" }
        ]
      }
    },
    {
      "tag": "Card",
      "props": [],
      "child": {
        "tags": [
          {
            "tag": "CardBody",
            "props": [],
            "child": {
              "tags": [
                {
                  "tag": "CardTitle",
                  "props": ["className=\"mb-4\""],
                  "content": "\"BASE 注文情報\""
                },
                {
                  "tag": "BaseOrdersPagination",
                  "single": "yes",
                  "props": ["paginationWidth={6}"]
                },
                {
                  "tag": "MDBDataTable",
                  "single": "yes",
                  "props": ["responsive", "striped", "bordered", "data={this.state.orderData}", "searching={false}", "paging={false}"]
                },
                {
                  "tag": "BaseOrdersPagination",
                  "single": "yes",
                  "props": ["paginationWidth={6}"]
                }
              ]
            }
          }
        ]
      }
    }
  ]
}
