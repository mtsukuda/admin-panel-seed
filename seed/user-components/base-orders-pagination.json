{
  "componentName": "BaseOrdersPagination",
  "import": [
    {
      "name": "Link",
      "from": "react-router-dom",
      "type": "package",
      "props": []
    },
    {
      "name": "queryParameters",
      "from": "../../helpers/Functions/url-parameters",
      "type": "package",
      "props": []
    },
    {
      "name": "setQuery",
      "from": "../../helpers/Functions/url-parameters",
      "type": "package",
      "props": []
    }
  ],
  "lifeCycleMethods": [
    {
      "methodName": "componentDidMount",
      "code": "this.getOffset();"
    }
  ],
  "renderBeforeReturn": [
    "let paginationLength = Math.round(Number(this.state.offset)/Number(this.props.limit)) + 1;",
    "let nextOffset = paginationLength * Number(this.props.limit);",
    "let previousOffset = nextOffset - (Number(this.props.limit) * 2);",
    "let liPreviousClass = paginationLength > 1 ? \"page-item\" : \"page-item disabled\";",
    "let pagerSlot = this.props.paginationWidth - 2;"
  ],
  "defaultProps": [
    { "name": "limit", "initial": "20"},
    { "name": "paginationWidth", "initial": "5"}
  ],
  "tags": [
    {
      "componentMethod": {
        "states": [
          { "name": "offset", "initial": "0" }
        ],
        "methods": [
          { "name": "getOffset", "bind": false, "methodType": "plane", "args": [], "code": "const qs = queryParameters();console.log(qs);if (qs === null || qs.offset === undefined) {setQuery({ offset: \"0\" });} else {this.setState({\"offset\": qs.offset});}" },
          { "name": "navigate", "bind": false, "methodType": "plane", "args": ["offset"], "code": "setQuery({ offset: offset });window.location.href = document.location.href;" }
        ]
      }
    },
    {
      "tag": "nav",
      "props": ["aria-label=\"Page navigation BASE orders\""],
      "child": {
        "tags": [
          {
            "tag": "ul",
            "props": ["class=\"pagination justify-content-end\""],
            "child": {
              "tags": [
                {
                  "tag": "li",
                  "props": ["class={liPreviousClass}"],
                  "child": {
                    "tags": [
                      {
                        "tag": "Link",
                        "props": ["class=\"page-link\"", "onClick={() => this.navigate(previousOffset)}", "tabindex=\"-1\""],
                        "content": "\"Previous\"",
                        "child": {
                          "tags": [
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "tag": "{[...Array(paginationLength)].map((e, i) => {let liClass =i === paginationLength - 1 ? \"page-item active\" : \"page-item\";if (paginationLength > 5 && i === 0) {return (<li className={liClass}><Link class=\"page-link\"onClick={() =>this.navigate(0)}>{this.props.t(1)}</Link></li>);}if (paginationLength > this.props.paginationWidth && i === 1) {return (<li class={liClass}><div class=\"page-link\">...</div></li>);}if (paginationLength > this.props.paginationWidth && pagerSlot < paginationLength - i) {return;}return (<li class={liClass}><Link class=\"page-link\"onClick={() =>this.navigate(i * Number(this.props.limit) + (i === 0 ? 0 : 1))}>{this.props.t(i + 1)}</Link></li>);",
                  "close": "})}",
                  "type": "raw"
                },
                {
                  "tag": "li",
                  "props": ["class=\"disabled\""],
                  "child": {
                    "tags": [
                      {
                        "tag": "Link",
                        "props": ["class=\"page-link\"", "onClick={() => this.navigate(nextOffset)}"],
                        "content": "\"Next\"",
                        "child": {
                          "tags": [
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    }
  ]
}
